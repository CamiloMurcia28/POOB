#BlueJ class context
comment0.target=NPTensor
comment1.params=
comment1.target=NPTensor()
comment1.text=\r\n\ Constructor\ de\ la\ clase\ NPTensor\ el\ cual\ lo\ inicializa\ \r\n\ dando\ paso\ a\ la\ configuracion\ de\ este\ por\ medio\ de\ sus\ metodos.\r\n\ \r\n
comment10.params=name\ axis
comment10.target=double\ mean(java.lang.String,\ int)
comment10.text=\r\n\ Calcula\ el\ valor\ medio\ de\ un\ tensor\ a\ lo\ largo\ de\ un\ eje.\r\n\r\n@param\ name\ El\ nombre\ de\ la\ variable\ que\ contiene\ el\ tensor\ para\ calcular\ la\ media.\r\n\ @param\ axis\ El\ eje\ a\ lo\ largo\ del\ cual\ se\ calcular\u00E1\ la\ media.\r\n\ @return\ El\ valor\ medio\ a\ lo\ largo\ del\ eje\ especificado.\r\n
comment11.params=name\ value
comment11.target=int[]\ find(java.lang.String,\ int)
comment11.text=\r\n\ Encuentra\ los\ \u00EDndices\ de\ los\ elementos\ en\ un\ tensor\ que\ son\ iguales\ a\ un\ valor\ especificado.\r\n\r\n\ @param\ nombre\ El\ nombre\ de\ la\ variable\ que\ contiene\ el\ tensor\ en\ el\ que\ se\ va\ a\ buscar.\r\n\ @param\ valor\ El\ valor\ que\ se\ busca\ en\ el\ tensor.\r\n\ @return\ Un\ arreglo\ de\ \u00EDndices\ donde\ se\ encuentra\ el\ valor\ especificado\ en\ el\ tensor.\r\n
comment12.params=t1\ t2
comment12.target=int[][][]\ suma(Tensor,\ Tensor)
comment12.text=\r\n\ Suma\ de\ dos\ tensores\ de\ 3\ dimensiones.\r\n\r\n\ @param\ t1\ Tensor\ n\u00FAmero\ 1.\r\n\ @param\ t2\ Tensor\ n\u00FAmero\ 2.\r\n\ @return\ res\ devuelve\ la\ suma\ de\ los\ dos\ tensores\ con\ la\ misma\ forma.\r\n
comment13.params=t1\ t2
comment13.target=int[][][]\ resta(Tensor,\ Tensor)
comment13.text=\r\n\ Resta\ de\ dos\ tensores.\r\n\r\n\ @param\ t1\ Tensor\ n\u00FAmero\ 1.\r\n\ @param\ t2\ Tensor\ n\u00FAmero\ 2.\r\n\ @return\ res\ devuelve\ la\ resta\ de\ los\ dos\ tensores\ con\ la\ misma\ forma.\r\n
comment14.params=t1\ t2
comment14.target=int[][][]\ multiplicacion(Tensor,\ Tensor)
comment14.text=\r\n\ Multiplicaci\u00F3n\ de\ dos\ tensores.\r\n\r\n\ @param\ t1\ Tensor\ n\u00FAmero\ 1.\r\n\ @param\ t2\ Tensor\ n\u00FAmero\ 2.\r\n\ @return\ res\ devuelve\ la\ resta\ de\ los\ dos\ tensores\ con\ la\ misma\ forma.\r\n
comment15.params=tensor
comment15.target=Tensor\ sort(Tensor)
comment15.text=\r\nHalla\ el\ tensor\ de\ forma\ organizada\ ascendentemente\r\n\r\n@param\ tensor,\ tensor\ al\ cual\ se\ le\ desea\ sacar\ la\ raiz\ cubica\r\n@return\ retorna\ el\ tensor\ ordenado\r\n
comment16.params=t1
comment16.target=int[][][]\ cubeRoot(Tensor)
comment16.text=\r\nHalla\ la\ raiz\ cubica\ de\ un\ tensor\r\n\r\n@param\ t1\ tensor\ al\ cual\ se\ le\ desea\ sacar\ la\ raiz\ cubica\r\n@return\ retorna\ la\ raiz\ cubica\ del\ tensor\r\n
comment17.params=t1\ t2
comment17.target=int[][][]\ division(Tensor,\ Tensor)
comment17.text=\r\nHalla\ la\ raiz\ cubica\ de\ un\ tensor\r\n\r\n@param\ t1\ tensor\ al\ cual\ se\ le\ desea\ sacar\ la\ raiz\ cubica\r\n@return\ retorna\ la\ raiz\ cubica\ del\ tensor\r\n
comment2.params=name\ shape\ value
comment2.target=void\ assign(java.lang.String,\ int[],\ int)
comment2.text=\r\n\ Asigna\ al\ tensor\ una\ forma\ especificada\ y\ un\ valor\ constante\ \r\n\r\n\ @param\ name\ nombre\ que\ tendra\ el\ tensor\ que\ se\ va\ a\ crear\r\n\ @param\ shape\ forma\ del\ tensor\ representada\ en\ forma\ de\ arreglo\ de\ enteros\r\n\ @param\ value\ valor\ constante\ que\ va\ a\ tener\ el\ tensor\r\n
comment3.params=name\ shape\ values
comment3.target=void\ assign(java.lang.String,\ int[],\ int[])
comment3.text=\r\n\ Asigna\ al\ tensor\ una\ forma\ especificada\ y\ los\ valores\ que\ tendra\r\n\r\n\ @param\ name\ nombre\ que\ tendra\ el\ tensor\ que\ se\ va\ a\ crear\r\n\ @param\ shape\ forma\ del\ tensor\ representada\ en\ forma\ de\ arreglo\ de\ enteros\r\n\ @param\ values\ valores\ que\ van\ a\ llevar\ el\ tensor\ ingresados\ como\ arreglo\ de\ enteros\r\n
comment4.params=name\ index
comment4.target=int\ getValue(java.lang.String,\ int[])
comment4.text=\r\n\ Obtiene\ el\ valor\ de\ una\ posici\u00F3n\ especificada\ de\ un\ tensor\ dado\ su\ nombre\r\n\r\n\ @param\ name\ \ Nombre\ del\ tensor\ que\ se\ desea\ obtener\ el\ valor.\r\n\ @param\ index\ arreglo\ entero\ donde\ se\ va\ a\ espeficiar\ la\ posici\u00F3n\ cuyo\ valor\ se\ quiere\ conocer.\r\n\ @return\ retorna\ el\ valor\ del\ tensor\r\n
comment5.params=
comment5.target=boolean\ ok()
comment5.text=\r\n\ Verifica\ que\ la\ ultima\ operaci\u00F3n\ se\ haya\ realizado\ con\ exito.\r\n\r\n\ @return\ Retorna\ un\ booleano\ segun\ sea\ el\ caso.\r\n
comment6.params=t
comment6.target=java.lang.String\ shape(Tensor)
comment6.text=\r\n\ Obtiene\ la\ forma\ del\ tensor\r\n\ @param\ t\ nombre\ del\ tensor\ que\ se\ quiere\ consultar\r\n\ @return\ resultado\ resulta\ la\ forma\ del\ tensor\ en\ caso\ de\ que\ este\ no\ sea\ nulo\r\n
comment7.params=t\ newShape
comment7.target=void\ reshape(Tensor,\ int[])
comment7.text=\r\n\ Modifica\ la\ forma\ de\ un\ tensor\ creado\r\n\r\n\ @param\ t\ nombre\ del\ tensor\ que\ se\ quiere\ modificar\ la\ forma\r\n\ @param\ newShape\ arreglo\ de\ enteros\ que\ especifica\ la\ nueva\ forma\ que\ tendra\r\n
comment8.params=name
comment8.target=Tensor\ shuffle(java.lang.String)
comment8.text=\r\n\ Mezcla\ los\ valores\ de\ forma\ aleatoria\ de\ un\ tensor\ dado\r\n\r\n\ @param\ name\ nombre\ del\ tensor\ que\ se\ desea\ mezclar\ aleatoriamente.\r\n\ @return\ Retorna\ el\ nuevo\ tensor\ con\ los\ valores\ mezclados\r\n\ \ \ \ \ \ \ \r\n
comment9.params=name\ axis\ start\ end
comment9.target=Tensor\ slice(java.lang.String,\ int,\ int,\ int)
comment9.text=\r\n\ Divide\ el\ tensor\ en\ peque\u00F1os\ tensores.\r\n\r\n\ @param\ name\ nombre\ del\ tensor\ que\ vamos\ a\ dividir\r\n\ @param\ axis\ El\ eje\ sobre\ el\ cual\ se\ corta\ el\ tensor\r\n\ @param\ start\ La\ posici\u00F3n\ desde\ la\ cual\ vamos\ a\ iniciar\ la\ division\r\n\ @param\ end\ La\ posicio\u00F3n\ desde\ en\ la\ cual\ vamos\ a\ terminar\ la\ division\r\n\ @return\ Retorna\ un\ tensor\ contenido\ en\ el\ tensor\ \r\n
numComments=18
