#BlueJ class context
comment0.target=LazyFlight
comment0.text=\r\n\ Clase\ LazyFlight,\ una\ subclase\ de\ Flight.\r\n\ Esta\ clase\ representa\ un\ vuelo\ que\ solo\ toma\ una\ fotografia\r\n\ @author\ Camilo\ Murcia\ y\ Jeisson\ Casallas\r\n\ @version\ 5.0\ 10/31/23\r\n
comment1.params=color\ from\ to
comment1.target=LazyFlight(java.lang.String,\ int[],\ int[])
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ lazyFlight\r\n\ \r\n\ @param\:\ String\ color,\ el\ valor\ del\ color\ del\ vuelo\r\n\ @param\ int[]\ from,\ arreglo\ con\ las\ coordenadas\ de\ inicio\ del\ vuelo\r\n\ @param\ int[]\ tom\ arreglo\ con\ las\ coordenadas\ de\ fin\ del\ vuelo\r\n
comment2.params=teta
comment2.target=boolean\ photograph(int)
comment2.text=\r\n\ Metodo\ para\ crear\ un\ objeto\ de\ fotografia\ del\ avion\ especificado\r\n\ \r\n\ @param\ teta\ angulo\ que\ va\ a\ tener\ la\ fotografia\r\n\ @return\ bandera,\ retorna\ un\ booleano\ si\ se\ puede\ crear\ la\ fotografia\ con\ el\ angulo\ especificado\r\n
comment3.params=teta
comment3.target=boolean\ photograph(float)
comment3.text=\r\n\ Sobreescritura\ del\ metodo\ para\ crear\ un\ objeto\ de\ fotografia\ del\ avion\ especificado\r\n\ \r\n\ @param\ teta\ angulo\ que\ va\ a\ tener\ la\ fotografia\r\n\ @return\ bandera,\ retorna\ un\ booleano\ si\ se\ puede\ crear\ la\ fotografia\ con\ el\ angulo\ especificado\r\n
numComments=4
