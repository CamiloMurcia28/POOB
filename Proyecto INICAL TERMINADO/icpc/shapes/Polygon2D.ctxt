#BlueJ class context
comment0.target=Polygon2D
comment0.text=\r\n\ This\ class\ is\ a\ Polygon\ with\ float\ coordinates.\r\n\r\n\ @version\ $Id\:\ Polygon2D.java\ 594018\ 2007-11-12\ 04\:17\:41Z\ cam\ $\r\n
comment1.params=
comment1.target=Polygon2D()
comment1.text=\r\n\ Creates\ an\ empty\ Polygon2D.\r\n
comment10.params=
comment10.target=Polyline2D\ getPolyline2D()
comment10.text=\ get\ the\ associated\ {@link\ Polyline2D}.\r\n
comment11.params=
comment11.target=java.awt.Polygon\ getPolygon()
comment12.params=color
comment12.target=void\ getPolygon(java.lang.String)
comment13.params=p
comment13.target=void\ addPoint(java.awt.geom.Point2D)
comment14.params=x\ y
comment14.target=void\ addPoint(float,\ float)
comment14.text=\r\n\ Appends\ the\ specified\ coordinates\ to\ this\ <code>Polygon2D</code>.\r\n\ @param\ \ \ \ \ \ \ x\ the\ specified\ x\ coordinate\r\n\ @param\ \ \ \ \ \ \ y\ the\ specified\ y\ coordinate\r\n
comment15.params=p
comment15.target=boolean\ contains(java.awt.Point)
comment15.text=\r\n\ Determines\ whether\ the\ specified\ {@link\ Point}\ is\ inside\ this\r\n\ <code>Polygon</code>.\r\n\ @param\ p\ the\ specified\ <code>Point</code>\ to\ be\ tested\r\n\ @return\ <code>true</code>\ if\ the\ <code>Polygon</code>\ contains\ the\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <code>Point</code>;\ <code>false</code>\ otherwise.\r\n\ @see\ \#contains(double,\ double)\r\n
comment16.params=x\ y
comment16.target=boolean\ contains(int,\ int)
comment16.text=\r\n\ Determines\ whether\ the\ specified\ coordinates\ are\ inside\ this\r\n\ <code>Polygon</code>.\r\n\ <p>\r\n\ @param\ x\ the\ specified\ x\ coordinate\ to\ be\ tested\r\n\ @param\ y\ the\ specified\ y\ coordinate\ to\ be\ tested\r\n\ @return\ \ <code>true</code>\ if\ this\ <code>Polygon</code>\ contains\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ specified\ coordinates,\ (<i>x</i>,&nbsp;<i>y</i>);\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <code>false</code>\ otherwise.\r\n
comment17.params=
comment17.target=java.awt.geom.Rectangle2D\ getBounds2D()
comment17.text=\r\n\ Returns\ the\ high\ precision\ bounding\ box\ of\ the\ {@link\ Shape}.\r\n\ @return\ a\ {@link\ Rectangle2D}\ that\ precisely\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ bounds\ the\ <code>Shape</code>.\r\n
comment18.params=
comment18.target=java.awt.Rectangle\ getBounds()
comment19.params=x\ y
comment19.target=boolean\ contains(double,\ double)
comment19.text=\r\n\ Determines\ if\ the\ specified\ coordinates\ are\ inside\ this\r\n\ <code>Polygon</code>.\ \ For\ the\ definition\ of\r\n\ <i>insideness</i>,\ see\ the\ class\ comments\ of\ {@link\ Shape}.\r\n\ @param\ x\ the\ specified\ x\ coordinate\r\n\ @param\ y\ the\ specified\ y\ coordinate\r\n\ @return\ <code>true</code>\ if\ the\ <code>Polygon</code>\ contains\ the\r\n\ specified\ coordinates;\ <code>false</code>\ otherwise.\r\n
comment2.params=rec
comment2.target=Polygon2D(java.awt.geom.Rectangle2D)
comment2.text=\r\n\ Constructs\ and\ initializes\ a\ <code>Polygon2D</code>\ from\ the\ specified\r\n\ Rectangle2D.\r\n\ @param\ rec\ the\ Rectangle2D\r\n\ @exception\ \ NullPointerException\ rec\ is\ <code>null</code>.\r\n
comment20.params=
comment20.target=void\ updateComputingPath()
comment21.params=p
comment21.target=boolean\ contains(java.awt.geom.Point2D)
comment21.text=\r\n\ Tests\ if\ a\ specified\ {@link\ Point2D}\ is\ inside\ the\ boundary\ of\ this\r\n\ <code>Polygon</code>.\r\n\ @param\ p\ a\ specified\ <code>Point2D</code>\r\n\ @return\ <code>true</code>\ if\ this\ <code>Polygon</code>\ contains\ the\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ specified\ <code>Point2D</code>;\ <code>false</code>\r\n\ \ \ \ \ \ \ \ \ \ otherwise.\r\n\ @see\ \#contains(double,\ double)\r\n
comment22.params=x\ y\ w\ h
comment22.target=boolean\ intersects(double,\ double,\ double,\ double)
comment22.text=\r\n\ Tests\ if\ the\ interior\ of\ this\ <code>Polygon</code>\ intersects\ the\r\n\ interior\ of\ a\ specified\ set\ of\ rectangular\ coordinates.\r\n\ @param\ x\ the\ x\ coordinate\ of\ the\ specified\ rectangular\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ shape's\ top-left\ corner\r\n\ @param\ y\ the\ y\ coordinate\ of\ the\ specified\ rectangular\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ shape's\ top-left\ corner\r\n\ @param\ w\ the\ width\ of\ the\ specified\ rectangular\ shape\r\n\ @param\ h\ the\ height\ of\ the\ specified\ rectangular\ shape\r\n\ @return\ <code>true</code>\ if\ the\ interior\ of\ this\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <code>Polygon</code>\ and\ the\ interior\ of\ the\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ specified\ set\ of\ rectangular\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ coordinates\ intersect\ each\ other;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <code>false</code>\ otherwise.\r\n
comment23.params=r
comment23.target=boolean\ intersects(java.awt.geom.Rectangle2D)
comment23.text=\r\n\ Tests\ if\ the\ interior\ of\ this\ <code>Polygon</code>\ intersects\ the\r\n\ interior\ of\ a\ specified\ <code>Rectangle2D</code>.\r\n\ @param\ r\ a\ specified\ <code>Rectangle2D</code>\r\n\ @return\ <code>true</code>\ if\ this\ <code>Polygon</code>\ and\ the\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ interior\ of\ the\ specified\ <code>Rectangle2D</code>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ intersect\ each\ other;\ <code>false</code>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ otherwise.\r\n
comment24.params=x\ y\ w\ h
comment24.target=boolean\ contains(double,\ double,\ double,\ double)
comment24.text=\r\n\ Tests\ if\ the\ interior\ of\ this\ <code>Polygon</code>\ entirely\r\n\ contains\ the\ specified\ set\ of\ rectangular\ coordinates.\r\n\ @param\ x\ the\ x\ coordinate\ of\ the\ top-left\ corner\ of\ the\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ specified\ set\ of\ rectangular\ coordinates\r\n\ @param\ y\ the\ y\ coordinate\ of\ the\ top-left\ corner\ of\ the\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ specified\ set\ of\ rectangular\ coordinates\r\n\ @param\ w\ the\ width\ of\ the\ set\ of\ rectangular\ coordinates\r\n\ @param\ h\ the\ height\ of\ the\ set\ of\ rectangular\ coordinates\r\n\ @return\ <code>true</code>\ if\ this\ <code>Polygon</code>\ entirely\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ contains\ the\ specified\ set\ of\ rectangular\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ coordinates;\ <code>false</code>\ otherwise.\r\n
comment25.params=r
comment25.target=boolean\ contains(java.awt.geom.Rectangle2D)
comment25.text=\r\n\ Tests\ if\ the\ interior\ of\ this\ <code>Polygon</code>\ entirely\r\n\ contains\ the\ specified\ <code>Rectangle2D</code>.\r\n\ @param\ r\ the\ specified\ <code>Rectangle2D</code>\r\n\ @return\ <code>true</code>\ if\ this\ <code>Polygon</code>\ entirely\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ contains\ the\ specified\ <code>Rectangle2D</code>;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <code>false</code>\ otherwise.\r\n\ @see\ \#contains(double,\ double,\ double,\ double)\r\n
comment26.params=at
comment26.target=java.awt.geom.PathIterator\ getPathIterator(java.awt.geom.AffineTransform)
comment26.text=\r\n\ Returns\ an\ iterator\ object\ that\ iterates\ along\ the\ boundary\ of\ this\r\n\ <code>Polygon</code>\ and\ provides\ access\ to\ the\ geometry\r\n\ of\ the\ outline\ of\ this\ <code>Polygon</code>.\ \ An\ optional\r\n\ {@link\ AffineTransform}\ can\ be\ specified\ so\ that\ the\ coordinates\r\n\ returned\ in\ the\ iteration\ are\ transformed\ accordingly.\r\n\ @param\ at\ an\ optional\ <code>AffineTransform</code>\ to\ be\ applied\ to\ the\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ coordinates\ as\ they\ are\ returned\ in\ the\ iteration,\ or\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <code>null</code>\ if\ untransformed\ coordinates\ are\ desired\r\n\ @return\ a\ {@link\ PathIterator}\ object\ that\ provides\ access\ to\ the\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ geometry\ of\ this\ <code>Polygon</code>.\r\n
comment27.params=at\ flatness
comment27.target=java.awt.geom.PathIterator\ getPathIterator(java.awt.geom.AffineTransform,\ double)
comment27.text=\r\n\ Returns\ an\ iterator\ object\ that\ iterates\ along\ the\ boundary\ of\r\n\ the\ <code>Polygon2D</code>\ and\ provides\ access\ to\ the\ geometry\ of\ the\r\n\ outline\ of\ the\ <code>Shape</code>.\ \ Only\ SEG_MOVETO,\ SEG_LINETO,\ and\r\n\ SEG_CLOSE\ point\ types\ are\ returned\ by\ the\ iterator.\r\n\ Since\ polygons\ are\ already\ flat,\ the\ <code>flatness</code>\ parameter\r\n\ is\ ignored.\r\n\ @param\ at\ an\ optional\ <code>AffineTransform</code>\ to\ be\ applied\ to\ the\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ coordinates\ as\ they\ are\ returned\ in\ the\ iteration,\ or\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <code>null</code>\ if\ untransformed\ coordinates\ are\ desired\r\n\ @param\ flatness\ the\ maximum\ amount\ that\ the\ control\ points\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ a\ given\ curve\ can\ vary\ from\ colinear\ before\ a\ subdivided\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ curve\ is\ replaced\ by\ a\ straight\ line\ connecting\ the\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ endpoints.\ \ Since\ polygons\ are\ already\ flat\ the\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <code>flatness</code>\ parameter\ is\ ignored.\r\n\ @return\ a\ <code>PathIterator</code>\ object\ that\ provides\ access\ to\ the\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <code>Shape</code>\ object's\ geometry.\r\n
comment3.params=pol
comment3.target=Polygon2D(java.awt.Polygon)
comment3.text=\r\n\ Constructs\ and\ initializes\ a\ <code>Polygon2D</code>\ from\ the\ specified\r\n\ Polygon.\r\n\ @param\ pol\ the\ Polygon\r\n\ @exception\ \ NullPointerException\ pol\ is\ <code>null</code>.\r\n
comment4.params=xpoints\ ypoints\ npoints
comment4.target=Polygon2D(float[],\ float[],\ int)
comment4.text=\r\n\ Constructs\ and\ initializes\ a\ <code>Polygon2D</code>\ from\ the\ specified\r\n\ parameters.\r\n\ @param\ xpoints\ an\ array\ of\ <i>x</i>\ coordinates\r\n\ @param\ ypoints\ an\ array\ of\ <i>y</i>\ coordinates\r\n\ @param\ npoints\ the\ total\ number\ of\ points\ in\ the\ <code>Polygon2D</code>\r\n\ @exception\ \ NegativeArraySizeException\ if\ the\ value\ of\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <code>npoints</code>\ is\ negative.\r\n\ @exception\ \ IndexOutOfBoundsException\ if\ <code>npoints</code>\ is\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ greater\ than\ the\ length\ of\ <code>xpoints</code>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ or\ the\ length\ of\ <code>ypoints</code>.\r\n\ @exception\ \ NullPointerException\ if\ <code>xpoints</code>\ or\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ <code>ypoints</code>\ is\ <code>null</code>.\r\n
comment5.params=xpoints\ ypoints\ npoints
comment5.target=Polygon2D(int[],\ int[],\ int)
comment5.text=\r\n\ Constructs\ and\ initializes\ a\ <code>Polygon2D</code>\ from\ the\ specified\r\n\ parameters.\r\n\ @param\ xpoints\ an\ array\ of\ <i>x</i>\ coordinates\r\n\ @param\ ypoints\ an\ array\ of\ <i>y</i>\ coordinates\r\n\ @param\ npoints\ the\ total\ number\ of\ points\ in\ the\ <code>Polygon2D</code>\r\n\ @exception\ \ NegativeArraySizeException\ if\ the\ value\ of\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <code>npoints</code>\ is\ negative.\r\n\ @exception\ \ IndexOutOfBoundsException\ if\ <code>npoints</code>\ is\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ greater\ than\ the\ length\ of\ <code>xpoints</code>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ or\ the\ length\ of\ <code>ypoints</code>.\r\n\ @exception\ \ NullPointerException\ if\ <code>xpoints</code>\ or\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ <code>ypoints</code>\ is\ <code>null</code>.\r\n
comment6.params=
comment6.target=void\ reset()
comment6.text=\r\n\ Resets\ this\ <code>Polygon</code>\ object\ to\ an\ empty\ polygon.\r\n
comment7.params=
comment7.target=java.lang.Object\ clone()
comment8.params=
comment8.target=void\ calculatePath()
comment9.params=x\ y
comment9.target=void\ updatePath(float,\ float)
numComments=28
